The ''1-my_list'' module
============================

Using ''1-mylist''
---------------------

Import function from module:
    >>> MyList = __import__('1-my_list').MyList

Test Class Type:
    >>> my_list = MyList()
    >>> type(my_list) == MyList
    True

Test Instance type:
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

Test print_sorted method called via class with no args:
    >>> my_list.__class__.print_sorted()
    Traceback (most recent call last):
    TypeError: print_sorted() missing 1 required positional argument: 'self'

Test print_sorted method called with 1 arg:
    >>> my_list.print_sorted([2, 4])
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

Test print_sorted method called with 2 args:
    >>> my_list.print_sorted([4, 5], 8)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 3 were given

Empty list test:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Normal list test:
    >>> my_list = MyList([2, 10, 1])
    >>> my_list.print_sorted()
    [1, 2, 10]

Negative ints list test:
    >>> my_list = MyList([-1000, -98, -232565, 0, -23423434, -123])
    >>> my_list.print_sorted()
    [-23423434, -232565, -1000, -123, -98, 0]

Test append:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list
    [1]

Test Original list unchanged:
    >>> my_list = MyList([10, 1, -10, 100, 0])
    >>> my_list.print_sorted()
    [-10, 0, 1, 10, 100]
    >>> my_list
    [10, 1, -10, 100, 0]
